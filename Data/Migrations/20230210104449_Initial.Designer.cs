// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(TradeMarketDbContext))]
    [Migration("20230210104449_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountValue = 15,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscountValue = 20,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            DiscountValue = 16,
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1960),
                            Name = "David",
                            Surname = "Nutter"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1965),
                            Name = "Alan",
                            Surname = "Taylor"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1969),
                            Name = "Peter",
                            Surname = "Dinklage"
                        });
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 19m,
                            ProductCategoryId = 1,
                            ProductName = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Price = 98m,
                            ProductCategoryId = 2,
                            ProductName = "pepper"
                        },
                        new
                        {
                            Id = 3,
                            Price = 45m,
                            ProductCategoryId = 3,
                            ProductName = "Grape juice"
                        },
                        new
                        {
                            Id = 4,
                            Price = 60m,
                            ProductCategoryId = 4,
                            ProductName = "Chicken"
                        },
                        new
                        {
                            Id = 5,
                            Price = 90m,
                            ProductCategoryId = 5,
                            ProductName = "Rice"
                        });
                });

            modelBuilder.Entity("Data.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Fruits"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Vegetables"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Drinks"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Meat"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Grocery"
                        });
                });

            modelBuilder.Entity("Data.Entities.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheckedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Receipts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            IsCheckedOut = true,
                            OperationDate = new DateTime(2023, 2, 9, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            IsCheckedOut = false,
                            OperationDate = new DateTime(2023, 2, 9, 15, 40, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            IsCheckedOut = true,
                            OperationDate = new DateTime(2023, 2, 9, 16, 8, 45, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Data.Entities.ReceiptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscountUnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountUnitPrice = 15m,
                            ProductId = 1,
                            Quantity = 1,
                            ReceiptId = 1,
                            UnitPrice = 19m
                        },
                        new
                        {
                            Id = 2,
                            DiscountUnitPrice = 10m,
                            ProductId = 2,
                            Quantity = 2,
                            ReceiptId = 1,
                            UnitPrice = 196m
                        },
                        new
                        {
                            Id = 3,
                            DiscountUnitPrice = 30m,
                            ProductId = 5,
                            Quantity = 7,
                            ReceiptId = 2,
                            UnitPrice = 630m
                        },
                        new
                        {
                            Id = 4,
                            DiscountUnitPrice = 18m,
                            ProductId = 4,
                            Quantity = 2,
                            ReceiptId = 3,
                            UnitPrice = 120m
                        },
                        new
                        {
                            Id = 5,
                            DiscountUnitPrice = 35m,
                            ProductId = 2,
                            Quantity = 1,
                            ReceiptId = 3,
                            UnitPrice = 45m
                        });
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.HasOne("Data.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.HasOne("Data.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data.Entities.Receipt", b =>
                {
                    b.HasOne("Data.Entities.Customer", "Customer")
                        .WithMany("Receipts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Data.Entities.ReceiptDetail", b =>
                {
                    b.HasOne("Data.Entities.Product", "Product")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Receipt", "Receipt")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("Data.Entities.Customer", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Navigation("ReceiptDetails");
                });

            modelBuilder.Entity("Data.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data.Entities.Receipt", b =>
                {
                    b.Navigation("ReceiptDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
